import org.openhab.core.library.types.*
import org.openhab.core.persistence.*
import org.openhab.model.script.actions.*
import org.openhab.core.library.items.*


rule "Init Items"
when
    System started
then
    if (MotionSensorTimer_BedM.state == Uninitialized) {
        sendCommand(MotionSensorTimer_BedM, 5)
        postUpdate(MotionSensorTimer_BedM, 5)
    }
    if (MotionSensorTimer2_BedM.state == Uninitialized) {
        sendCommand(MotionSensorTimer2_BedM, 5)
        postUpdate(MotionSensorTimer2_BedM, 5)
    }
    if (LightType_BedM.state == Uninitialized) {
        sendCommand(LightType_BedM, 2)
        postUpdate(LightType_BedM, 2)
    }
    if (LightType2_BedM.state == Uninitialized) {
        sendCommand(LightType2_BedM, 2)
        postUpdate(LightType2_BedM, 2)
    }
    if (Version_BedM.state == Uninitialized) {
        sendCommand(Version_BedM, 0)
        postUpdate(Version_BedM, 0)
    }
    if (IP_BedM.state == Uninitialized) {
        sendCommand(IP_BedM, "0.0.0.0")
        postUpdate(IP_BedM, "0.0.0.0")
    }
    if (MAC_BedM.state == Uninitialized) {
        sendCommand(MAC_BedM, "ff:ff:ff:ff:ff:ff")
        postUpdate(MAC_BedM, "ff:ff:ff:ff:ff:ff")
    }
end


rule "Records last Temp_BedM update time"
when
  Item Temp_BedM received update
then
  postUpdate(Temp_BedM_LastUpdate, new DateTimeType())
end


rule "Records last Humidity_BedM update time"
when
  Item Humidity_BedM received update
then
  postUpdate(Humidity_BedM_LastUpdate, new DateTimeType())
end


rule "Records last Lux_BedM update time"
when
  Item Lux_BedM received update
then
  postUpdate(Lux_BedM_LastUpdate, new DateTimeType())
end

rule "Records last Pressure_BedM update time"
when
  Item Pressure_BedM received update
then
  postUpdate(Pressure_BedM_LastUpdate, new DateTimeType())
end
